<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MOBIWORLD Wallet</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <link rel="stylesheet" href="\css\shoppage_header.css">
    <link rel="stylesheet" href="\css\wallet.css">
</head>
<body>
    <!-- Header Section -->
    <%- include("../../views/partials/user/shoppage_header") %>
    
    <!-- Transaction Details Modal -->
    <div class="modal" id="myModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Transaction Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="modalBodyContent">
                    <!-- Content will be loaded dynamically -->
                </div>
                <div class="modal-footer">
                    <button id="okbutton" type="button" class="btn btn-primary" data-bs-dismiss="modal">Ok</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    
    <div class="wallet-container">
        <h2 class="page-title">Welcome To Your Wallet</h2>
        
        <!-- Wallet Card -->
        <div class="wallet-card-container">
            <div class="wallet-card">
                <div class="card-chip">
                    <i class="fas fa-microchip"></i>
                </div>
                <h5 class="card-title">MOBIWORLD</h5>
                <p class="card-number">**** **** **** 1234</p>
                <div class="balance">₹<%= wallet.WalletTotal ? wallet.WalletTotal.toLocaleString('en-IN') : '0' %></div>
                <div class="valid-thru"><%= expiryDate %></div>
            </div>
        </div>
        
        <!-- Quick Actions -->
        <!-- <div class="quick-action-container">
            <div class="row g-3">
                <div class="col-6 col-md-3">
                    <div class="action-card">
                        <div class="action-icon">
                            <i class="fas fa-plus-circle"></i>
                        </div>
                        <p class="action-title">Add Money</p>
                    </div>
                </div>
                <div class="col-6 col-md-3">
                    <div class="action-card">
                        <div class="action-icon">
                            <i class="fas fa-exchange-alt"></i>
                        </div>
                        <p class="action-title">Transfer</p>
                    </div>
                </div>
                <div class="col-6 col-md-3">
                    <div class="action-card">
                        <div class="action-icon">
                            <i class="fas fa-file-invoice"></i>
                        </div>
                        <p class="action-title">Pay Bills</p>
                    </div>
                </div>
                <div class="col-6 col-md-3">
                    <div class="action-card">
                        <div class="action-icon">
                            <i class="fas fa-history"></i>
                        </div>
                        <p class="action-title">History</p>
                    </div>
                </div>
            </div>
        </div> -->
        
        <!-- Add Funds Section -->
        <!-- <div class="add-funds-container">
            <h5 class="section-title">Add Amount</h5>
            <div class="row align-items-center">
                <div class="col-md-8 mb-3 mb-md-0">
                    <input type="text" class="form-control amount-input" placeholder="Enter amount">
                </div>
                <div class="col-md-4">
                    <button class="btn add-btn w-100 py-2">Add</button>
                </div>
            </div>
        </div> -->
        
        <!-- Transaction History -->
        <div class="transaction-container">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="section-title mb-0">Transaction History</h5>
                <div class="dropdown mb-3">
                    <button class="btn btn-sm btn-light dropdown-toggle" type="button" data-bs-toggle="dropdown">
                      <i class="fas fa-filter me-1"></i> Filter
                    </button>
                    <ul class="dropdown-menu" id="filter-options">
                      <li><a class="dropdown-item" href="#" data-type="all">All</a></li>
                      <li><a class="dropdown-item" href="#" data-type="credit">Credit</a></li>
                      <li><a class="dropdown-item" href="#" data-type="debit">Debit</a></li>
                    </ul>
                  </div>
            </div>
            
            <div class="table-responsive">
                <table class="table transaction-table">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Amount</th>
                            <th scope="col">Type</th>
                            <th scope="col">Date</th>
                            <th scope="col">Transaction Id</th>
                            <th scope="col">Payment Method</th>
                            <th scope="col">Description</th>
                            <th scope="col">Details</th>
                            <th scope="col">Balance</th>
                        </tr>
                    </thead>
                    <% let balance = 0; %>
                    <tbody id="transaction-list">
                        <% wallet.transaction.forEach((trans, index) => {
                            const amount = trans.Total;
                            if (trans.Type === 'Credit') {
                                balance += amount;
                            } else {
                                balance -= amount;
                            }
                        %>
                        <tr class="transaction-row <%= trans.Type === 'Credit' ? 'table-success' : 'table-danger' %>">
                            <td><%= index + 1 %></td>
                            <td class="fw-semibold">₹<%= amount.toLocaleString('en-IN') %></td>
                            <td>
                                <span class="<%= trans.Type === 'Credit' ? 'badge-credit' : 'badge-debit' %>">
                                    <%= trans.Type %>
                                </span>
                            </td>
                            <td><%= new Date(trans.createdOn).toLocaleDateString() %></td>
                            <td><%= trans.orderId?.orderId || '-' %></td>
                            <td><%= trans.orderId?.paymentMethod || '-' %></td>
                            <td><%= trans.description %></td>
                            <td>
                                <% if (trans.Type === 'Credit' && trans.description !== "Referral Amount" && trans.description !== "Referal CashPrize") { %>
                                    <i class="fas fa-eye action-btn order-link"
                                       title="View Details"
                                       data-order-id="<%= trans.orderId?.orderId || '' %>">
                                    </i>
                                <% } %>
                            </td>
                            <td class="fw-semibold text-primary">
                                ₹<%= balance.toLocaleString('en-IN') %>
                            </td>
                        </tr>
                        <% }) %>
                    </tbody>
                    
                </table>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
         document.querySelectorAll('#filter-options .dropdown-item').forEach(item => {
    item.addEventListener('click', async (e) => {
        e.preventDefault();
        const type = item.dataset.type;

        try {
            const res = await fetch(`/wallet/filter?type=${type}`);
            const data = await res.json(); 

            const transactions = data.transactions; 
            let runningBalance = data.balance;      
            const tbody = document.getElementById("transaction-list");
            tbody.innerHTML = ''; 

            transactions.forEach((trans, index) => {
                const row = document.createElement("tr");
                row.className = `transaction-row ${trans.Type === 'Credit' ? 'table-success' : 'table-danger'}`;

                row.innerHTML = `
                    <td>${index + 1}</td>
                    <td class="fw-semibold">₹${trans.Total.toLocaleString('en-IN')}</td>
                    <td>
                        <span class="${trans.Type === 'Credit' ? 'badge-credit' : 'badge-debit'}">${trans.Type}</span>
                    </td>
                    <td>${new Date(trans.createdOn).toDateString()}</td>
                    <td>${trans.orderId?.orderId || '-'}</td>
                    <td>${trans.orderId?.paymentMethod || '-'}</td>
                    <td>${trans.description || '-'}</td>
                    <td>
                        ${trans.Type === 'Credit' && trans.description !== "Referral Amount" && trans.description !== "Referal CashPrize"
                            ? `<i class="fas fa-eye action-btn order-link" title="View Details" data-order-id="${trans.orderId?.orderId || ''}"></i>`
                            : ''}
                    </td>
                    <td>₹${runningBalance.toLocaleString('en-IN')}</td>
                `;

                
                if (trans.Type === 'Credit') {
                    runningBalance -= trans.Total;
                } else {
                    runningBalance += trans.Total;
                }

                tbody.appendChild(row);
            });

        } catch (err) {
            console.error('Failed to fetch filtered data:', err);
        }
    });
});

       
            document.getElementById('transaction-list').addEventListener('click', function (e) {
                if (e.target.classList.contains('order-link')) {
                    const orderId = e.target.getAttribute('data-order-id');
                    console.log('Clicked Order ID:', orderId);
                    showOrderModal(orderId);
                }
                });

        
function showOrderModal(orderId) {
    fetch(`/admin/orderdetails/${orderId}`)
        .then(response => response.json())
        .then(orderDetails => {
            if (orderDetails) {
                const modalBody = document.getElementById('modalBodyContent');
                const returnedItems = orderDetails.order.orderedItems.filter(item => item.returnStatus === 'Returned');
                const cancelledItems = orderDetails.order.orderedItems.filter(item => item.cancelledStatus === 'Cancelled');

                let modalContent = `
                <!-- Order Header -->
                <div class="row mb-3">
                    <div class="col-8">
                        <h5 class="mb-1">Order #ORD-${orderDetails.order.orderId}</h5>
                        <p class="text-muted mb-0">Placed on ${new Date(orderDetails.order.createdOn).toLocaleDateString()}</p>
                    </div>
                    <div class="col-4 text-end">
                        <span class="badge ${orderDetails.order.status === 'Shipped' ? 'bg-success' : 'bg-warning'}">${orderDetails.order.status}</span>
                    </div>
                </div>

                <!-- Order Items -->
                <div class="row mb-3">
                    <div class="col-12">
                        <h6 class="mb-2">Order Items</h6>
                        ${orderDetails.order.orderedItems.map(item => `
                            <div class="card mb-2">
                                <div class="card-body py-2">
                                    <div class="row align-items-center">
                                        <div class="col-2">
                                            <img src="${item.product.productImage[0]}" alt="Product" class="img-fluid rounded">
                                        </div>
                                        <div class="col-7">
                                            <p class="mb-0 fw-bold">${item.product.productName}</p>
                                            <small class="text-muted">${item.quantity} x ₹${item.price.toLocaleString('en-IN')}</small>
                                        </div>
                                        <div class="col-3 text-end">
                                            <p class="mb-0 fw-bold">₹${(item.quantity * item.price).toLocaleString('en-IN')}</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>

                <!-- Order Summary -->
                <div class="row mb-3">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body">
                                <h6 class="mb-2">Order Summary</h6>
                                <div class="d-flex justify-content-between mb-1">
                                    <span>Subtotal:</span>
                                    <span>₹${orderDetails.order.totalPrice.toLocaleString('en-IN')}</span>
                                </div>
                                <div class="d-flex justify-content-between mb-1">
                                    <span>Shipping:</span>
                                    <span>₹0</span>
                                </div>
                                ${orderDetails.order.couponRevoked > 0 ? `
                                <div class="d-flex justify-content-between mb-1 text-danger">
                                    <span>Coupon Revoked:</span>
                                    <span>- ₹${orderDetails.order.couponRevoked.toLocaleString('en-IN')}</span>
                                </div>
                                <div class="text-danger small mb-2">Coupon was revoked as cart value did not meet the minimum requirement.</div>
                                ` : ''}
                                <div class="d-flex justify-content-between mb-1">
                                    <span>Discount:</span>
                                    <span>₹${orderDetails.order.discount.toLocaleString('en-IN')}</span>
                                </div>
                                <div class="d-flex justify-content-between mb-1">
                                    <span>Coupon Discount:</span>
                                    <span>₹${orderDetails.order.couponDiscount.toLocaleString('en-IN')}</span>
                                </div>
                                <hr class="my-2">
                                <div class="d-flex justify-content-between fw-bold">
                                    <span>Total:</span>
                                    <span>₹${((orderDetails.order.totalPrice - (orderDetails.order.discount + orderDetails.order.couponDiscount))).toLocaleString('en-IN')}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Returned Items -->
                ${returnedItems.length > 0 ? `
                <div class="row mb-3">
                    <div class="col-12">
                        <div class="card border-danger">
                            <div class="card-body">
                                <h6 class="mb-3 text-danger">Returned Items</h6>
                               ${returnedItems.map(item => {
                                const actualPrice = item.price || item.product.salePrice;
                                const offer = item.bestOffer || 0;
                                const subtotal = actualPrice * item.quantity;
                                const afterDiscount = subtotal - (offer * item.quantity);

                                // Check if couponRevoked exists and apply it
                                const couponRevoked = orderDetails.order.couponRevoked || 0;  // Assuming couponRevoked is available in orderDetails

                                // If couponRevoked exists, subtract it from the refund value
                                const finalRefundValue = couponRevoked > 0 ? afterDiscount - couponRevoked : afterDiscount;

                                return `
                                <div class="mb-2">
                                    <div class="d-flex justify-content-between">
                                        <span class="fw-bold">${item.product.productName}</span>
                                        <span>Qty: ${item.quantity}</span>
                                    </div>
                                    <div class="d-flex justify-content-between small">
                                        <span>Price: ₹${actualPrice.toLocaleString('en-IN')} x ${item.quantity} = ₹${subtotal.toLocaleString('en-IN')}</span>
                                        <span>Discount: ₹${(offer * item.quantity).toLocaleString('en-IN')}</span>
                                    </div>
                                    ${couponRevoked > 0 ? `
                                    <div class="d-flex justify-content-between small">
                                        <span>Coupon Revoked:</span>
                                        <span>- ₹${couponRevoked.toLocaleString('en-IN')}</span>
                                    </div>` : ''}
                                    <div class="text-end fw-semibold ${couponRevoked > 0 ? 'text-danger' : ''}">
                                        Final Refund Value: ₹${finalRefundValue.toLocaleString('en-IN')}
                                    </div>
                                    <hr class="my-2">
                                </div>
                                `;
                            }).join('')}

                            </div>
                        </div>
                    </div>
                </div>
                ` : ''}
                
                 ${cancelledItems.length > 0 ? `
                <div class="row mb-3">
                    <div class="col-12">
                        <div class="card border-danger">
                            <div class="card-body">
                                <h6 class="mb-3 text-danger">Cancelled Items</h6>
                               ${cancelledItems.map(item => {
                                const actualPrice = item.price || item.product.salePrice;
                                const offer = item.bestOffer || 0;
                                const subtotal = actualPrice * item.quantity;
                                const afterDiscount = subtotal - (offer * item.quantity);

                                // Check if couponRevoked exists and apply it
                                const couponRevoked = orderDetails.order.couponRevoked || 0;  // Assuming couponRevoked is available in orderDetails

                                // If couponRevoked exists, subtract it from the refund value
                                const finalRefundValue = couponRevoked > 0 ? afterDiscount - couponRevoked : afterDiscount;

                                return `
                                <div class="mb-2">
                                    <div class="d-flex justify-content-between">
                                        <span class="fw-bold">${item.product.productName}</span>
                                        <span>Qty: ${item.quantity}</span>
                                    </div>
                                    <div class="d-flex justify-content-between small">
                                        <span>Price: ₹${actualPrice.toLocaleString('en-IN')} x ${item.quantity} = ₹${subtotal.toLocaleString('en-IN')}</span>
                                        <span>Discount: ₹${(offer * item.quantity).toLocaleString('en-IN')}</span>
                                    </div>
                                    ${couponRevoked > 0 ? `
                                    <div class="d-flex justify-content-between small">
                                        <span>Coupon Revoked:</span>
                                        <span>- ₹${couponRevoked.toLocaleString('en-IN')}</span>
                                    </div>` : ''}
                                    <div class="text-end fw-semibold ${couponRevoked > 0 ? 'text-danger' : ''}">
                                        Final Refund Value: ₹${finalRefundValue.toLocaleString('en-IN')}
                                    </div>
                                    <hr class="my-2">
                                </div>
                                `;
                            }).join('')}

                            </div>
                        </div>
                    </div>
                </div>
                ` : ''}
            

                <!-- Shipping Information -->
                <div class="row">
                    <div class="col-md-6 mb-2 mb-md-0">
                        <div class="card h-100"> 
                            <div class="card-body">
                                <h6 class="card-title">Shipping Address</h6>
                                <p class="card-text mb-0">
                                    ${orderDetails.order.address[0].name}<br>
                                    ${orderDetails.order.address[0].addressType}<br>
                                    ${orderDetails.order.address[0].city}, ${orderDetails.order.address[0].state} ${orderDetails.order.address[0].pincode}<br>
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card h-100">
                            <div class="card-body">
                                <h6 class="card-title">Payment Method</h6>
                                <p class="card-text mb-1">${orderDetails.order.paymentMethod}</p>
                            </div>
                        </div>
                    </div>
                </div>
                `;

                modalBody.innerHTML = modalContent;
                var myModal = new bootstrap.Modal(document.getElementById("myModal"));
                myModal.show();
            } else {
                alert('Order not found');
            }
        })
        .catch(error => {
            console.error('Error fetching order details:', error);
            alert('Something went wrong!');
        });
}

    </script> 
</body>
</html>